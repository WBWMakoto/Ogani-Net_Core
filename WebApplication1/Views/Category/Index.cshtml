@model WebApplication1.Models.ShopViewModel

@{
    ViewData["Title"] = "Sản phẩm theo danh mục";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-5">
                <div class="sidebar">
                    <div class="sidebar__item">
                        <h4>Danh mục</h4>
                        <ul>
                            @foreach (var category in Model.Categories)
                            {
                                <li><a href="#">@category.Name</a></li>
                            }
                        </ul>
                    </div>
                    <div class="sidebar__item">
                        <h4>Chọn mức giá</h4>
                        <div class="price-range-wrap">
                            <div class="price-range ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content"
                                 data-min="0" data-max="1000000">
                                <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                            </div>
                            <div class="range-slider">
                                <div class="price-input">
                                    <input type="text" id="minamount" name="minPrice" readonly>
                                    <input type="text" id="maxamount" name="maxPrice" readonly>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="sidebar__item">
                        <div class="latest-product__text">
                            <h4>Mới nhất</h4>
                            <div class="latest-product__slider owl-carousel">
                                @{
                                    var latestChunks = Model.LatestProducts
                                    .Select((product, index) => new { Product = product, Index = index })
                                    .GroupBy(x => x.Index / 3);
                                }
                                @foreach (var group in latestChunks)
                                {
                                    <div class="latest-prdouct__slider__item">
                                        @foreach (var item in group)
                                        {
                                            <a asp-controller="Shop" asp-action="Details" asp-route-id="@item.Product.Id" class="latest-product__item">
                                                <div class="latest-product__item__pic">
                                                    <img src="@(string.IsNullOrEmpty(item.Product.ImageUrl) ? "/images/latest-product/default.jpg" : item.Product.ImageUrl)" alt="">
                                                </div>
                                                <div class="latest-product__item__text">
                                                    <h6>@item.Product.Name</h6>
                                                    <span>@item.Product.Price.ToString("C")</span>
                                                </div>
                                            </a>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-md-7">
                <div class="product__discount">
                    <div class="section-title product__discount__title">
                        <h2>Khuyến mãi</h2>
                    </div>
                    <div class="row">
                        <div class="product__discount__slider owl-carousel">
                            @foreach (var product in Model.DiscountedProducts)
                            {
                                var discountPercent = 20;
                                var originalPrice = product.Price / (1 - (discountPercent / 100m));
                                <div class="col-lg-4">
                                    <div class="product__discount__item">
                                        <div class="product__discount__item__pic set-bg"
                                             data-setbg="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/product/discount/default.jpg" : product.ImageUrl)">
                                            <div class="product__discount__percent">- @(product.Discount.HasValue ? product.Discount.Value.ToString("#,##0.##") : "0") %</div>                                            <ul class="product__item__pic__hover">
                                                <li><a href="#"><i class="fa fa-heart"></i></a></li>
                                                <li>
                                                    <a href="#" class="share-product"
                                                       data-product-name="@product.Name"
                                                       data-product-url="@Url.Action("Details", "Shop", new { id = product.Id }, protocol: Context.Request.Scheme)"
                                                       data-product-image="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/product/default.jpg" : product.ImageUrl)">
                                                        <i class="fa fa-retweet"></i>
                                                    </a>
                                                </li>
                                                <li>
                                                    <a href="#" class="add-to-cart" data-product-id="@product.Id">
                                                        <i class="fa fa-shopping-cart"></i>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="product__discount__item__text">
                                            <span>@(product.Category?.Name ?? "Uncategorized")</span>
                                            <h5><a asp-controller="Shop" asp-action="Details" asp-route-id="@product.Id">@product.Name</a></h5>
                                            <div class="product__item__price">@product.iPrice.ToString("C") <span>@originalPrice.ToString("C")</span></div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="filter__item">
                    <div class="row">
                        <div class="col-lg-4 col-md-5">
                            <div class="filter__sort">
                                <form method="get" action="@Url.Action("Index")">
                                    <span>Sắp xếp theo</span>
                                    <select name="sort" onchange="this.form.submit()">
                                        <option value="0" selected="@(ViewBag.CurrentSort == 0 ? "selected" : null)">Mặc định</option>
                                        <option value="1" selected="@(ViewBag.CurrentSort == 1 ? "selected" : null)">Giá: Thấp đến Cao</option>
                                        <option value="2" selected="@(ViewBag.CurrentSort == 2 ? "selected" : null)">Giá: Cao đến Thấp</option>
                                    </select>
                                    <input type="hidden" name="page" value="@ViewBag.CurrentPage" />
                                </form>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="filter__found">
                                <h6><span>@Model.Products.Count</span> Sản phẩm được tìm thấy</h6>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-3">
                            <div class="filter__option">
                                <span class="icon_grid-2x2"></span>
                                <span class="icon_ul"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-6">
                            <div class="product__item">
                                <div class="product__item__pic set-bg" data-setbg="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/product/default.jpg" : product.ImageUrl)">
                                    <ul class="product__item__pic__hover">
                                        <li><a href="#"><i class="fa fa-heart"></i></a></li>
                                        <li>
                                            <a href="#" class="share-product"
                                               data-product-name="@product.Name"
                                               data-product-url="@Url.Action("Details", "Shop", new { id = product.Id }, protocol: Context.Request.Scheme)"
                                               data-product-image="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/product/default.jpg" : product.ImageUrl)">
                                                <i class="fa fa-retweet"></i>
                                            </a>
                                        </li>
                                        <li>
                                            <a href="#" class="add-to-cart" data-product-id="@product.Id">
                                                <i class="fa fa-shopping-cart"></i>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="product__item__text">
                                    <h6><a asp-controller="Shop" asp-action="Details" asp-route-id="@product.Id">@product.Name</a></h6>
                                    <h5>@product.Price.ToString("C")</h5>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="product__pagination">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })"><i class="fa fa-long-arrow-left"></i></a>
                    }

                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <a href="@Url.Action("Index", new { page = i })" class="@(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })"><i class="fa fa-long-arrow-right"></i></a>
                    }
                </div>

            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
    <script>
        $(document).ready(function () {
            // Khởi tạo thanh trượt giá
            $(".price-range").slider({
                range: true,
                min: 0,
                max: 1000000,
                values: [@(ViewBag.MinPrice ?? 0), @(ViewBag.MaxPrice ?? 1000000)],
                slide: function (event, ui) {
                    $("#minamount").val(ui.values[0]);
                    $("#maxamount").val(ui.values[1]);
                },
                stop: function (event, ui) {
                    $("#filterForm").submit();
                }
            });

            $("#minamount").val($(".price-range").slider("values", 0));
            $("#maxamount").val($(".price-range").slider("values", 1));

            // Xử lý thêm vào giỏ hàng bằng AJAX
            $('.add-to-cart').click(function (e) {
                e.preventDefault(); // Ngăn chuyển hướng mặc định
                var productId = $(this).data('product-id');

                $.ajax({
                    url: '@Url.Action("AddToCart", "Cart")',
                    type: 'POST',
                    data: { productId: productId, quantity: 1 },
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượng giỏ hàng (số mặt hàng)
                            $("#cart-count").text(response.cartCount);
                            $("#cart-count-mobile").text(response.cartCount);

                            // Cập nhật tổng số lượng sản phẩm (bao gồm số lượng của từng mặt hàng)
                            $("#total-quantity").text(response.totalQuantity);

                            // Cập nhật tổng tiền
                            $(".header__cart__price span").text(response.cartTotal + "đ");

                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: response.message,
                                timer: 1500
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while adding to cart.'
                        });
                    }
                });
            });

            // Xử lý chia sẻ sản phẩm
            $('.share-product').click(function (e) {
                e.preventDefault();
                var productName = $(this).data('product-name');
                var productUrl = $(this).data('product-url');
                var productImage = $(this).data('product-image');

                // Tạo nội dung chia sẻ
                var shareText = `Check out this product: ${productName} - ${productUrl}`;

                // Tùy chọn chia sẻ
                Swal.fire({
                    title: 'Share this product',
                    html: `
                                        <div>
                                            <a href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(productUrl)}&quote=${encodeURIComponent(shareText)}" target="_blank" class="btn btn-primary" style="margin: 5px;">
                                                <i class="fa fa-facebook"></i> Share on Facebook
                                            </a>
                                            <a href="https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}" target="_blank" class="btn btn-info" style="margin: 5px;">
                                                <i class="fa fa-twitter"></i> Share on Twitter
                                            </a>
                                        </div>
                                    `,
                    showConfirmButton: false,
                    showCancelButton: true,
                    cancelButtonText: 'Close'
                });
            });
        });
    </script>
}